TCP 프로토콜

-전송 제어 프로토콜(Transmission Control Protocol)은 인터넷에 연결된 컴퓨터에서 실행되는 프로그램 간에 통신을 안정적으로, 순서대로, 에러없이 교환할 수 있게 함
-TCP의 안정성을 요구하지 않는 애플리케이션은 비접속형 사용자 데이터그램 프로토콜 사용(User Datagram Protocol)
-tcp는 udp와 다르게 기능이 굉장히 많음
-연결을 지향하기 때문에 더 안정적인 통신 제공, 근데 udp보단 조금 느림(구분은 안됨)
-보통 일반적인 통신을 할때 tcp, ip, 이더넷 프로토콜 사용
-일반적 길이는 20바이트, 최대 60바이트까지 늘어날 수 있음

TCP flags
	-계속 통신하면서 상대방에 데이터를 보내는데, 이때 나타내는 값이 flag. 연결을 종료하는 건지 시작하는 건지, 데이터를 보내는 건지 등을 표현 함
	-U(urgent flag) 긴급 비트 = 보내는 데이터에 우선순위가 높은 것이 있다. 다른 것보다 먼저 처리해달라는 요구
	-A(ack flag) 승인 비트 = 승인을 하는 역할
	-P(push flag) 밀어넣기 비트 = 버퍼(내가 받을 수 있는 공간)와 상관없이 데이터를 밀어넣겠다는 의미
	-R(reset flag) 초기화 비트 = 둘 사이 연결 관계를 초기화 함
	-S(sync flag) 동기화 비트 = 상대방이랑 연결을 시작할 때 사용
	-F(fin flag) 종료 비트 = 연결 끊을 때 사용


동시에 여러 플래그가 사용될 수 있음. UAPRSF만 주로 씀. 

[](./download/tcpprotocol1.png)



TCP를 이용한 통신 과정
-TCP 이용한 데이터 통신을 할 때 프로세스와 프로세스를 연결하기 위해 가장 먼저 수행되는 과정:
	3 Way Handshake
	-클라이언트가 서버에게 요청 패킷을 보냄
	-서버가 클라이언트의 요청을 받아들이는 패킷을 보내고
	-클라이언트는 이를 최종적으로 수락하는 패킷을 보냄

-캡슐화해서 보내고 받은 측은 디캡슐화함. 플래그가 설정되어 전송됨. 보안까지 하려면 이 숫자들을 계산할 줄 알아야함.

[](./download/tcpprotocol2.png)

받는 쪽에서 동기화하는 것임. 받은 시퀀스 값에서 1 더함. 그리고 시퀀스에 랜덤 숫자 지정. 시퀀스 처음 보낼때는 랜덤넘버지만, 두번째 쓰일때는 동기화된 값을 보내야 함. 
이 다음 보낼때는 클라이언트임. (이 과정 완료되면 연결되기 때문)
이후 통신을 하는데 누군가가 이걸 계산해서 서버랑 통신할 수 있음(세션 하이제킹)
만약 네이버 로그인 되어있는데 다른 주체가 서버랑 통신하면 그 페이지를 그대로 받아와서 보안 문제가 생기는 것.
